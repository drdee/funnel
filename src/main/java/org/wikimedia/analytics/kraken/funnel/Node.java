package org.wikimedia.analytics.kraken.funnel;

import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.regex.MatchResult;
import java.util.regex.Pattern;


/**
 * Component	Description					Example
 * client		client application 			web, iphone, android
 * languagecode	project language			en, fr, ja
 * project		project name				wikipedia, wikisource
 * namespace								0, 2
 * page			page or functional grouping		
 * event		action taken by user		impression, click
 *
 * suggested encoding of an event:
 * client:languagecode:project:namespace:page:event
 * 
 * Inspiration taken from "The UniÔ¨Åed Logging Infrastructure
 * for Data Analytics at Twitter" 
 * (http://vldb.org/pvldb/vol5/p1771_georgelee_vldb2012.pdf)
 */

public class Node extends AbstractNode{
	/** The params. */
	public HashMap<String, String> params;
	
	/** The keys. */
	public List<String> keys = new ArrayList<String>();
	
	/** The visited. */
	public List<Date> visited;
	
	/** The useragent. */
	public String useragent;
	
	/** The wikis. */
	public Pattern wikis = Pattern.compile("");
	
	/**
	 * Instantiates a new node. This constructor does not require the
	 * the useragent string as input.
	 *
	 * @param fproject the project variable as generated by the EventLogging extension.
	 * @param fnamespace the namespace variable as generated by the EventLogging extension.
	 * @param fpage the page variable as generated by the EventLogging extension.
	 * @param fevent the event variable as generated by the EventLogging extension.
	 */
	public Node(String fproject, Integer fnamespace, Integer fpage, String fevent) {
		keys.add("client");
		keys.add("languageCode");
		keys.add("project");
		keys.add("namespace");
		keys.add("page");
		keys.add("event");
		
		setProject(fproject);
		this.params.put("namespace", fnamespace.toString());
		this.params.put("page", fpage.toString());
		this.params.put("event", fevent);
	}

	/**
	 * Instantiates a new node with useragent information.
	 *
	 * @param fuseragent the useragent variable as obtained from Kraken.
	 * @param fproject the project variable as generated by the EventLogging extension.
	 * @param fnamespace the namespace variable as generated by the EventLogging extension.
	 * @param fpage the page variable as generated by the EventLogging extension.
	 * @param fevent the event variable as generated by the EventLogging extension.

	 */
	public Node(String fuseragent, String fproject, Integer fnamespace, Integer fpage, String fevent) {
		this.params.put("client", fuseragent);
	}
	
	/**
	 * Split project variable from funnel in language and project component.
	 *
	 * @param fproject the new project
	 */
	protected void setProject(String fproject) {
		MatchResult m = wikis.matcher(fproject);
		String project = m.group();
		String languageCode = fproject.substring(0, fproject.indexOf(project));
		this.params.put("project", project);
		this.params.put("languageCode", languageCode);
	}
	
	/**
	 * Compare two nodes and determine whether they can be considered the same.
	 *
	 * @param b the b
	 * @return true, if successful
	 */
	public boolean equals(Node b) {
		if (this == b) return true;
		if (!(b instanceof Node)) return false;
		Node bb = (Node)b;
		return false;
	}
	
	/* (non-Javadoc)
	 * @see java.lang.Object#toString()
	 */
	public String toString() {
		StringBuilder sb = new StringBuilder(100);
		int e = 1;
		for (String key : keys) {
			String value = this.params.get(key);
			if (value != null) {
				sb.append(value);
			} else {
				sb.append(".");
			}
			if (e != params.size()) {
				sb.append(":");
			}
			e++;
		}
		return sb.toString();
	}
}
